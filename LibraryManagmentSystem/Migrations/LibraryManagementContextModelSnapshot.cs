// <auto-generated />
using System;
using LibraryManagmentSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LibraryManagmentSystem.Migrations
{
    [DbContext(typeof(LibraryManagementContext))]
    partial class LibraryManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LibraryManagmentSystem.Models.AccountsInfo", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Password = "alpha",
                            Role = "Student",
                            UserName = "Team Alpha"
                        },
                        new
                        {
                            UserId = 2,
                            Password = "admin",
                            Role = "Librarian",
                            UserName = "admin"
                        },
                        new
                        {
                            UserId = 3,
                            Password = "password",
                            Role = "Student",
                            UserName = "John"
                        });
                });

            modelBuilder.Entity("LibraryManagmentSystem.Models.AuthorInfo", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AuthorName = "JK Rowling"
                        },
                        new
                        {
                            AuthorId = 2,
                            AuthorName = "Joseph Murphy"
                        },
                        new
                        {
                            AuthorId = 3,
                            AuthorName = "Dale Carnegie"
                        },
                        new
                        {
                            AuthorId = 4,
                            AuthorName = "Martin Dunkerton"
                        },
                        new
                        {
                            AuthorId = 5,
                            AuthorName = "Mark Manson"
                        },
                        new
                        {
                            AuthorId = 6,
                            AuthorName = "Amit Ghule"
                        },
                        new
                        {
                            AuthorId = 7,
                            AuthorName = "Arthur Conan Doyle"
                        },
                        new
                        {
                            AuthorId = 8,
                            AuthorName = "Alice Walker"
                        },
                        new
                        {
                            AuthorId = 9,
                            AuthorName = "Ralph Ellison"
                        },
                        new
                        {
                            AuthorId = 10,
                            AuthorName = "J. R. R. Tolkien"
                        },
                        new
                        {
                            AuthorId = 11,
                            AuthorName = "Rebecca Serle"
                        },
                        new
                        {
                            AuthorId = 12,
                            AuthorName = "Tana French"
                        },
                        new
                        {
                            AuthorId = 13,
                            AuthorName = "Harper Lee"
                        });
                });

            modelBuilder.Entity("LibraryManagmentSystem.Models.BooksInfo", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("BookTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("IssuedBooks")
                        .HasColumnType("int");

                    b.Property<int>("NoOfCopies")
                        .HasColumnType("int");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            AuthorId = 1,
                            BookTitle = "Harry Potter and the Philosopher's Stone",
                            Category = "Fiction",
                            ImageURl = "/Images/books/b1.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 12,
                            PublisherId = 1
                        },
                        new
                        {
                            BookId = 2,
                            AuthorId = 1,
                            BookTitle = "Harry Potter and the Chamber of Secrets",
                            Category = "Fiction",
                            ImageURl = "/Images/books/b2.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 16,
                            PublisherId = 1
                        },
                        new
                        {
                            BookId = 3,
                            AuthorId = 1,
                            BookTitle = "Harry Potter and the Prisoner of Azkaban",
                            Category = "Fiction",
                            ImageURl = "/Images/books/b3.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 7,
                            PublisherId = 1
                        },
                        new
                        {
                            BookId = 4,
                            AuthorId = 1,
                            BookTitle = "Harry Potter and the Goblet of Fire",
                            Category = "Fiction",
                            ImageURl = "/Images/books/b4.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 9,
                            PublisherId = 1
                        },
                        new
                        {
                            BookId = 5,
                            AuthorId = 1,
                            BookTitle = "Harry Potter and the Order of the Phoenix",
                            Category = "Fiction",
                            ImageURl = "/Images/books/b5.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 6,
                            PublisherId = 1
                        },
                        new
                        {
                            BookId = 6,
                            AuthorId = 1,
                            BookTitle = "Harry Potter and the Half Blood Prince",
                            Category = "Fiction",
                            ImageURl = "/Images/books/b6.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 8,
                            PublisherId = 1
                        },
                        new
                        {
                            BookId = 7,
                            AuthorId = 1,
                            BookTitle = "Harry Potter and the Deathly Hallows",
                            Category = "Fiction",
                            ImageURl = "/Images/books/b7.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 8,
                            PublisherId = 1
                        },
                        new
                        {
                            BookId = 8,
                            AuthorId = 2,
                            BookTitle = "The Power of Your Subconscious Mind",
                            Category = "Self-Help",
                            ImageURl = "/Images/books/b8.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 15,
                            PublisherId = 2
                        },
                        new
                        {
                            BookId = 9,
                            AuthorId = 3,
                            BookTitle = "How to Win Friends and Influence People",
                            Category = "Self-Help",
                            ImageURl = "/Images/books/b9.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 4,
                            PublisherId = 2
                        },
                        new
                        {
                            BookId = 10,
                            AuthorId = 4,
                            BookTitle = "Think and Grow Rich",
                            Category = "Self-Help",
                            ImageURl = "/Images/books/b10.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 10,
                            PublisherId = 2
                        },
                        new
                        {
                            BookId = 11,
                            AuthorId = 5,
                            BookTitle = "The Subtle Art of Not Giving a F*ck",
                            Category = "Self-Help",
                            ImageURl = "/Images/books/b11.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 5,
                            PublisherId = 3
                        },
                        new
                        {
                            BookId = 12,
                            AuthorId = 6,
                            BookTitle = "Past Forward",
                            Category = "Contemporary romance",
                            ImageURl = "/Images/books/b12.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 12,
                            PublisherId = 4
                        },
                        new
                        {
                            BookId = 13,
                            AuthorId = 7,
                            BookTitle = "The Adventures of Sherlock Holmes",
                            Category = "Fiction",
                            ImageURl = "/Images/books/b13.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 23,
                            PublisherId = 5
                        },
                        new
                        {
                            BookId = 15,
                            AuthorId = 9,
                            BookTitle = "Invisible Man",
                            Category = "Novel",
                            ImageURl = "/Images/books/b15.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 34,
                            PublisherId = 7
                        },
                        new
                        {
                            BookId = 14,
                            AuthorId = 8,
                            BookTitle = "The Color Purple",
                            Category = "Epistolary novel",
                            ImageURl = "/Images/books/b14.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 15,
                            PublisherId = 6
                        },
                        new
                        {
                            BookId = 16,
                            AuthorId = 10,
                            BookTitle = "The Lord of the Rings",
                            Category = "High fantasy Adventure",
                            ImageURl = "/Images/books/b16.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 12,
                            PublisherId = 8
                        },
                        new
                        {
                            BookId = 17,
                            AuthorId = 11,
                            BookTitle = "One Italian Summer",
                            Category = "Domestic Fiction",
                            ImageURl = "/Images/books/b17.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 16,
                            PublisherId = 9
                        },
                        new
                        {
                            BookId = 18,
                            AuthorId = 12,
                            BookTitle = "In the Woods",
                            Category = "Mystery",
                            ImageURl = "/Images/books/b18.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 30,
                            PublisherId = 10
                        },
                        new
                        {
                            BookId = 19,
                            AuthorId = 13,
                            BookTitle = "To Kill a Mockingbird",
                            Category = "Southern Gothic Fiction",
                            ImageURl = "/Images/books/b19.png",
                            IsAvailable = true,
                            IssuedBooks = 0,
                            NoOfCopies = 19,
                            PublisherId = 11
                        });
                });

            modelBuilder.Entity("LibraryManagmentSystem.Models.LendRequest", b =>
                {
                    b.Property<int>("LendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<double?>("FineAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("LendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LendStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LendId");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("LendRequests");
                });

            modelBuilder.Entity("LibraryManagmentSystem.Models.PublisherInfo", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PublisherName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherId");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            PublisherId = 1,
                            PublisherName = "Bloomsbury Publishing"
                        },
                        new
                        {
                            PublisherId = 2,
                            PublisherName = "Simon & Schuster"
                        },
                        new
                        {
                            PublisherId = 3,
                            PublisherName = "HarperOne"
                        },
                        new
                        {
                            PublisherId = 4,
                            PublisherName = "Notion Press"
                        },
                        new
                        {
                            PublisherId = 5,
                            PublisherName = "George Newnes"
                        },
                        new
                        {
                            PublisherId = 6,
                            PublisherName = "Harcourt Brace Jovanovich"
                        },
                        new
                        {
                            PublisherId = 7,
                            PublisherName = "Random House"
                        },
                        new
                        {
                            PublisherId = 8,
                            PublisherName = "Allen & Unwin"
                        },
                        new
                        {
                            PublisherId = 9,
                            PublisherName = "Simon & Schuster"
                        },
                        new
                        {
                            PublisherId = 10,
                            PublisherName = "Viking Adult"
                        },
                        new
                        {
                            PublisherId = 11,
                            PublisherName = "J. B. Lippincott & Co."
                        });
                });

            modelBuilder.Entity("LibraryManagmentSystem.Models.BooksInfo", b =>
                {
                    b.HasOne("LibraryManagmentSystem.Models.AuthorInfo", "AuthorInfo")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagmentSystem.Models.PublisherInfo", "PublisherInfo")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AuthorInfo");

                    b.Navigation("PublisherInfo");
                });

            modelBuilder.Entity("LibraryManagmentSystem.Models.LendRequest", b =>
                {
                    b.HasOne("LibraryManagmentSystem.Models.BooksInfo", "BooksInfo")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibraryManagmentSystem.Models.AccountsInfo", "AccountsInfo")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountsInfo");

                    b.Navigation("BooksInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
